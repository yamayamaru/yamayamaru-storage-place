Lichee RVのピンアサインについて

mangopi mq proとLichee RVのピン配置は違うので要注意です。
ただ、ピンアサインが違うだけでI2CやlibgpiodでのGPIOの扱い方はArmbianのmangopi mq proとほぼ同じです。


ArmbianやDebianなら
sudo cat /sys/kernel/debug/pinctrl/2000000.pinctrl/pinmux-pins
を実行することでI2CのPinがわかるようです。

たとえばI2Cなら
Debianなら
pin 32 (PB0): device 2502800.twi function gpio_in group PB0
pin 33 (PB1): device 2502800.twi function gpio_in group PB1

Armbianなら
pin 32 (PB0): device 2502800.i2c function i2c2 group PB0
pin 33 (PB1): device 2502800.i2c function i2c2 group PB1

このPB0、PB1というのがI2Cのpinになります。

ここのpin配置からSDAのPB1はピンヘッダ左側の列の上から2番目
SCLのPB0はピンヘッダ左側の列の上から3番目になります。

Lichee RVのピン配置図
https://github.com/yamayamaru/yamayamaru-storage-place/blob/main/images/pin/Lichee_RV_pin_assignment.png


UNCLAIMEDは特に機能が与えられてないPinのようでlibgpiodなどで使えるようです。
たとえば、ピンヘッダの右側の一番下のピンのPE16はUNCLAIMEDになっているので
libgpiodのgpiod_chip_get_line()で144を指定すれば使えるようです。

pin 144 (PE16): UNCLAIMED


20211230_LicheeRV_debian_d1_hdmi_8723ds.img

$ sudo cat /sys/kernel/debug/pinctrl/2000000.pinctrl/pinmux-pins
Pinmux settings per pin
Format: pin (name): mux_owner|gpio_owner (strict) hog?
pin 32 (PB0): device 2502800.twi function gpio_in group PB0
pin 33 (PB1): device 2502800.twi function gpio_in group PB1
pin 34 (PB2): UNCLAIMED
pin 35 (PB3): UNCLAIMED
pin 36 (PB4): UNCLAIMED
pin 37 (PB5): UNCLAIMED
pin 38 (PB6): UNCLAIMED
pin 39 (PB7): UNCLAIMED
pin 40 (PB8): device 2500000.uart function uart0 group PB8
pin 41 (PB9): device 2500000.uart function uart0 group PB9
pin 42 (PB10): device 2031000.dmic function io_disabled group PB10
pin 43 (PB11): device 2031000.dmic function io_disabled group PB11
pin 44 (PB12): UNCLAIMED
pin 64 (PC0): device 2008000.ledc function ledc group PC0
pin 65 (PC1): UNCLAIMED
pin 66 (PC2): UNCLAIMED
pin 67 (PC3): UNCLAIMED
pin 68 (PC4): UNCLAIMED
pin 69 (PC5): UNCLAIMED
pin 70 (PC6): UNCLAIMED
pin 71 (PC7): UNCLAIMED
pin 96 (PD0): UNCLAIMED
pin 97 (PD1): UNCLAIMED
pin 98 (PD2): UNCLAIMED
pin 99 (PD3): UNCLAIMED
pin 100 (PD4): UNCLAIMED
pin 101 (PD5): UNCLAIMED
pin 102 (PD6): UNCLAIMED
pin 103 (PD7): UNCLAIMED
pin 104 (PD8): UNCLAIMED
pin 105 (PD9): UNCLAIMED
pin 106 (PD10): UNCLAIMED
pin 107 (PD11): UNCLAIMED
pin 108 (PD12): UNCLAIMED
pin 109 (PD13): UNCLAIMED
pin 110 (PD14): UNCLAIMED
pin 111 (PD15): UNCLAIMED
pin 112 (PD16): UNCLAIMED
pin 113 (PD17): UNCLAIMED
pin 114 (PD18): UNCLAIMED
pin 115 (PD19): UNCLAIMED
pin 116 (PD20): UNCLAIMED
pin 117 (PD21): UNCLAIMED
pin 118 (PD22): UNCLAIMED
pin 128 (PE0): UNCLAIMED
pin 129 (PE1): UNCLAIMED
pin 130 (PE2): UNCLAIMED
pin 131 (PE3): UNCLAIMED
pin 132 (PE4): UNCLAIMED
pin 133 (PE5): UNCLAIMED
pin 134 (PE6): UNCLAIMED
pin 135 (PE7): UNCLAIMED
pin 136 (PE8): UNCLAIMED
pin 137 (PE9): UNCLAIMED
pin 138 (PE10): UNCLAIMED
pin 139 (PE11): UNCLAIMED
pin 140 (PE12): UNCLAIMED
pin 141 (PE13): UNCLAIMED
pin 142 (PE14): device 2031000.dmic function io_disabled group PE14
pin 143 (PE15): UNCLAIMED
pin 144 (PE16): UNCLAIMED
pin 145 (PE17): device 2031000.dmic function io_disabled group PE17
pin 160 (PF0): device 4020000.sdmmc function sdc0 group PF0
pin 161 (PF1): device 4020000.sdmmc function sdc0 group PF1
pin 162 (PF2): device 4020000.sdmmc function sdc0 group PF2
pin 163 (PF3): device 4020000.sdmmc function sdc0 group PF3
pin 164 (PF4): device 4020000.sdmmc function sdc0 group PF4
pin 165 (PF5): device 4020000.sdmmc function sdc0 group PF5
pin 166 (PF6): GPIO 2000000.pinctrl:166
pin 192 (PG0): device 4021000.sdmmc function sdc1 group PG0
pin 193 (PG1): device 4021000.sdmmc function sdc1 group PG1
pin 194 (PG2): device 4021000.sdmmc function sdc1 group PG2
pin 195 (PG3): device 4021000.sdmmc function sdc1 group PG3
pin 196 (PG4): device 4021000.sdmmc function sdc1 group PG4
pin 197 (PG5): device 4021000.sdmmc function sdc1 group PG5
pin 198 (PG6): device 2500400.uart function uart1 group PG6
pin 199 (PG7): device 2500400.uart function uart1 group PG7
pin 200 (PG8): device 2500400.uart function uart1 group PG8
pin 201 (PG9): device 2500400.uart function uart1 group PG9
pin 202 (PG10): GPIO 2000000.pinctrl:202
pin 203 (PG11): UNCLAIMED
pin 204 (PG12): GPIO 2000000.pinctrl:204
pin 205 (PG13): UNCLAIMED
pin 206 (PG14): GPIO 2000000.pinctrl:206
pin 207 (PG15): GPIO 2000000.pinctrl:207
pin 208 (PG16): UNCLAIMED
pin 209 (PG17): UNCLAIMED
pin 210 (PG18): GPIO 2000000.pinctrl:210





Armbian_22.08.0-trunk_Nezha_jammy_current_5.19.0_xfce_desktop

$ sudo cat /sys/kernel/debug/pinctrl/2000000.pinctrl/pinmux-pins
Pinmux settings per pin
Format: pin (name): mux_owner|gpio_owner (strict) hog?
pin 32 (PB0): device 2502800.i2c function i2c2 group PB0
pin 33 (PB1): device 2502800.i2c function i2c2 group PB1
pin 34 (PB2): UNCLAIMED
pin 35 (PB3): UNCLAIMED
pin 36 (PB4): UNCLAIMED
pin 37 (PB5): UNCLAIMED
pin 38 (PB6): UNCLAIMED
pin 39 (PB7): UNCLAIMED
pin 40 (PB8): device 2500000.serial function uart0 group PB8
pin 41 (PB9): device 2500000.serial function uart0 group PB9
pin 42 (PB10): device 2502000.i2c function i2c0 group PB10
pin 43 (PB11): device 2502000.i2c function i2c0 group PB11
pin 44 (PB12): UNCLAIMED
pin 64 (PC0): device 2008000.led-controller function ledc group PC0
pin 65 (PC1): UNCLAIMED
pin 66 (PC2): device 4025000.spi function spi0 group PC2
pin 67 (PC3): device 4025000.spi function spi0 group PC3
pin 68 (PC4): device 4025000.spi function spi0 group PC4
pin 69 (PC5): device 4025000.spi function spi0 group PC5
pin 70 (PC6): device 4025000.spi function spi0 group PC6
pin 71 (PC7): device 4025000.spi function spi0 group PC7
pin 96 (PD0): UNCLAIMED
pin 97 (PD1): UNCLAIMED
pin 98 (PD2): UNCLAIMED
pin 99 (PD3): UNCLAIMED
pin 100 (PD4): UNCLAIMED
pin 101 (PD5): UNCLAIMED
pin 102 (PD6): UNCLAIMED
pin 103 (PD7): UNCLAIMED
pin 104 (PD8): UNCLAIMED
pin 105 (PD9): UNCLAIMED
pin 106 (PD10): device 4026000.spi function spi1 group PD10
pin 107 (PD11): device 4026000.spi function spi1 group PD11
pin 108 (PD12): device 4026000.spi function spi1 group PD12
pin 109 (PD13): device 4026000.spi function spi1 group PD13
pin 110 (PD14): device 4026000.spi function spi1 group PD14
pin 111 (PD15): device 4026000.spi function spi1 group PD15
pin 112 (PD16): device 2000c00.pwm function pwm group PD16
pin 113 (PD17): UNCLAIMED
pin 114 (PD18): device 2000c00.pwm function pwm group PD18
pin 115 (PD19): GPIO 2000000.pinctrl:115
pin 116 (PD20): GPIO 2000000.pinctrl:116
pin 117 (PD21): GPIO 2000000.pinctrl:117
pin 118 (PD22): device 2036000.spdif function spdif group PD22
pin 128 (PE0): UNCLAIMED
pin 129 (PE1): UNCLAIMED
pin 130 (PE2): UNCLAIMED
pin 131 (PE3): UNCLAIMED
pin 132 (PE4): UNCLAIMED
pin 133 (PE5): UNCLAIMED
pin 134 (PE6): UNCLAIMED
pin 135 (PE7): UNCLAIMED
pin 136 (PE8): UNCLAIMED
pin 137 (PE9): UNCLAIMED
pin 138 (PE10): UNCLAIMED
pin 139 (PE11): UNCLAIMED
pin 140 (PE12): UNCLAIMED
pin 141 (PE13): UNCLAIMED
pin 142 (PE14): UNCLAIMED
pin 143 (PE15): UNCLAIMED
pin 144 (PE16): UNCLAIMED
pin 145 (PE17): UNCLAIMED
pin 160 (PF0): device 4020000.mmc function mmc0 group PF0
pin 161 (PF1): device 4020000.mmc function mmc0 group PF1
pin 162 (PF2): device 4020000.mmc function mmc0 group PF2
pin 163 (PF3): device 4020000.mmc function mmc0 group PF3
pin 164 (PF4): device 4020000.mmc function mmc0 group PF4
pin 165 (PF5): device 4020000.mmc function mmc0 group PF5
pin 166 (PF6): GPIO 2000000.pinctrl:166
pin 192 (PG0): device 4021000.mmc function mmc1 group PG0
pin 193 (PG1): device 4021000.mmc function mmc1 group PG1
pin 194 (PG2): device 4021000.mmc function mmc1 group PG2
pin 195 (PG3): device 4021000.mmc function mmc1 group PG3
pin 196 (PG4): device 4021000.mmc function mmc1 group PG4
pin 197 (PG5): device 4021000.mmc function mmc1 group PG5
pin 198 (PG6): device 2500400.serial function uart1 group PG6
pin 199 (PG7): device 2500400.serial function uart1 group PG7
pin 200 (PG8): device 2500400.serial function uart1 group PG8
pin 201 (PG9): device 2500400.serial function uart1 group PG9
pin 202 (PG10): UNCLAIMED
pin 203 (PG11): UNCLAIMED
pin 204 (PG12): GPIO 2000000.pinctrl:204
pin 205 (PG13): UNCLAIMED
pin 206 (PG14): UNCLAIMED
pin 207 (PG15): UNCLAIMED
pin 208 (PG16): UNCLAIMED
pin 209 (PG17): UNCLAIMED
pin 210 (PG18): UNCLAIMED






おまけ

Armbian & Debian用のLチカプログラム
(ledには必ず電流制限抵抗をつけてください、電流制限抵抗をつけない場合、LEDやLichee RVが壊れることがあります)

このプログラムにはlibgpiodが必要です。
$ sudo apt install libgpiod2 libgpiod-dev gpiod

コンパイル方法
$ gcc -O2 -o test_libgpiod_gpio test_libgpiod_gpio.c -lgpiod


実行方法

$ sudo chmod o+rw /dev/gpiochip0
$ ./test_libgpiod_gpio

以降、test_libgpiod_gpio.cのソースコード
//
//  下記サイトを参考にしてます。
//  libgpiodの使い方
//    https://qiita.com/wancom/items/b041ee7408a87fabf48e
//  ledはPE16,ピンヘッダの40番ピンに接続して使ってください(シンク接続を想定してます)
//  (ledには必ず電流制限抵抗をつけてください、電流制限抵抗をつけない場合、LEDやLichee RVが壊れることがあります)
//

#include<stdio.h>
#include<unistd.h>
#include<gpiod.h>

int main() {
  const char *appname = "gpiotest";

  struct gpiod_chip *gchip;
  struct gpiod_line *glinein, *glineout;
  int value;

  // GPIOデバイスを開く
  if ((gchip=gpiod_chip_open("/dev/gpiochip0")) == NULL) {
    perror("gpiod_chip_open");
    return 1;
  }

  // GPIO入力
  // GPIOのピンのハンドラを取得する
  // ここではpin 140(PE12,ピンヘッダの38番ピン(ピンヘッダ右側の列の下から2番目のピンです))
  if ((glinein=gpiod_chip_get_line(gchip, 140)) == NULL) {
    perror("gpiod_chip_get_line");
    return 1;
  }

  // GPIOを入力モードに設定する
  if (gpiod_line_request_input(glinein, appname) != 0) {
    perror("gpiod_line_request_input");
  }

  // GPIOの値を取得する
  if ((value=gpiod_line_get_value(glinein)) == -1) {
    perror("gpiod_line_get_value");
  }
  printf("Pin 34=%d\n", value);

  // GPIO出力
  // GPIOのピンのハンドラを取得する
  // ここではpin 144(PE16,ピンヘッダの40番ピン(ピンヘッダ右側の列の一番下のピンです))を使用
  if ((glineout=gpiod_chip_get_line(gchip, 144)) == NULL) {
    perror("gpiod_chip_get_line");
    return 1;
  }

  // GPIOを出力モードに設定する
  if (gpiod_line_request_output(glineout, appname, 0) != 0) {
    perror("gpiod_line_request_output");
  }

  // GPIOの値を1に設定する
  if ((value=gpiod_line_set_value(glineout, 1)) == -1) {
    perror("gpiod_line_set_value");
  }

  // 出力を維持するためちょっと待つ。
  sleep(1);


  for (int i = 0; i < 10; i++) {
      // GPIOの値を1に設定する
      if ((value=gpiod_line_set_value(glineout, 0)) == -1) {
          perror("gpiod_line_set_value");
      }

      // 出力を維持するためちょっと待つ。
      sleep(2);

      // GPIOの値を0に設定する
      if ((value=gpiod_line_set_value(glineout, 1)) == -1) {
          perror("gpiod_line_set_value");
      }

      // 出力を維持するためちょっと待つ。
      sleep(2);

  }

  // GPIOデバイスを閉じる
  //void gpiod_chip_unref(struct gpiod_chip *chip);
  //gpiod_chip_unref(gchip);
  void gpiod_chip_close(struct gpiod_chip *chip);
  gpiod_chip_close(gchip);
  return 0;
}
